/*
    author: Erika Bourque
*/
/*
    There is no DROP TABLE IF EXISTS in Oracle.
    These blocks prevent the "table or view does not exist" error from
    being raised.
    Error code 942: table or view does not exist
*/
/
BEGIN
   EXECUTE IMMEDIATE 'DROP TABLE "CGQA_COMPONENT_TABLES_HISTORY"';
EXCEPTION
   WHEN OTHERS THEN
      IF SQLCODE != -942 THEN
         RAISE;
      END IF;
END;
/
/
BEGIN
   EXECUTE IMMEDIATE 'DROP TABLE "CGQA_COMPONENT_GROUPS_HISTORY"';
EXCEPTION
   WHEN OTHERS THEN
      IF SQLCODE != -942 THEN
         RAISE;
      END IF;
END;
/
/
BEGIN
   EXECUTE IMMEDIATE 'DROP TABLE "CGQA_COMPONENT_DETAILS_HISTORY"';
EXCEPTION
   WHEN OTHERS THEN
      IF SQLCODE != -942 THEN
         RAISE;
      END IF;
END;
/
/
BEGIN
   EXECUTE IMMEDIATE 'DROP TABLE "CGQA_COMP_CAT_HISTORY"';
EXCEPTION
   WHEN OTHERS THEN
      IF SQLCODE != -942 THEN
         RAISE;
      END IF;
END;
/
/
BEGIN
   EXECUTE IMMEDIATE 'DROP TABLE "CGQA_COMPONENT_TABLES"';
EXCEPTION
   WHEN OTHERS THEN
      IF SQLCODE != -942 THEN
         RAISE;
      END IF;
END;
/
/
BEGIN
   EXECUTE IMMEDIATE 'DROP TABLE "CGQA_COMPONENT_GROUPS"';
EXCEPTION
   WHEN OTHERS THEN
      IF SQLCODE != -942 THEN
         RAISE;
      END IF;
END;
/
/
BEGIN
   EXECUTE IMMEDIATE 'DROP TABLE "CGQA_COMPONENT_DETAILS"';
EXCEPTION
   WHEN OTHERS THEN
      IF SQLCODE != -942 THEN
         RAISE;
      END IF;
END;
/
/
BEGIN
   EXECUTE IMMEDIATE 'DROP TABLE "CGQA_COMPONENT_CATEGORIES"';
EXCEPTION
   WHEN OTHERS THEN
      IF SQLCODE != -942 THEN
         RAISE;
      END IF;
END;
/
/*
    There is no DROP SEQUENCE IF EXISTS in Oracle.
    These blocks prevent the "sequence does not exist" error from
    being raised.
    Error code 2289: sequence does not exist
*/
/
BEGIN
   EXECUTE IMMEDIATE 'DROP SEQUENCE "COMPONENT_CATEGORIES_SEQ"';
EXCEPTION
   WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN
         RAISE;
      END IF;
END;
/
/
BEGIN
   EXECUTE IMMEDIATE 'DROP SEQUENCE "COMPONENT_DETAILS_SEQ"';
EXCEPTION
   WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN
         RAISE;
      END IF;
END;
/
/
BEGIN
   EXECUTE IMMEDIATE 'DROP SEQUENCE "COMPONENT_GROUPS_SEQ"';
EXCEPTION
   WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN
         RAISE;
      END IF;
END;
/
/
BEGIN
   EXECUTE IMMEDIATE 'DROP SEQUENCE "COMPONENT_TABLES_SEQ"';
EXCEPTION
   WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN
         RAISE;
      END IF;
END;
/
/
BEGIN
   EXECUTE IMMEDIATE 'DROP SEQUENCE "COMPONENT_CAT_HISTORY_SEQ"';
EXCEPTION
   WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN
         RAISE;
      END IF;
END;
/
/
BEGIN
   EXECUTE IMMEDIATE 'DROP SEQUENCE "COMPONENT_DETAILS_HISTORY_SEQ"';
EXCEPTION
   WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN
         RAISE;
      END IF;
END;
/
/
BEGIN
   EXECUTE IMMEDIATE 'DROP SEQUENCE "COMPONENT_GROUPS_HISTORY_SEQ"';
EXCEPTION
   WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN
         RAISE;
      END IF;
END;
/
/
BEGIN
   EXECUTE IMMEDIATE 'DROP SEQUENCE "COMPONENT_TABLES_HISTORY_SEQ"';
EXCEPTION
   WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN
         RAISE;
      END IF;
END;
/
/
BEGIN
   EXECUTE IMMEDIATE 'DROP SEQUENCE "COMPONENT_TEMP_TABLE_NAME_SEQ"';
EXCEPTION
   WHEN OTHERS THEN
      IF SQLCODE != -2289 THEN
         RAISE;
      END IF;
END;
/
-- Component categories, can be nested within each other
-- 0 is false, 1 is true
CREATE TABLE "CGQA_COMPONENT_CATEGORIES"(
    "CATEGORY_ID" NUMBER PRIMARY KEY,
    "NAME" VARCHAR(256) NOT NULL,
    "PARENT_CATEGORY" NUMBER,
    "DEPRECATED_STATUS" NUMBER DEFAULT 0 NOT NULL,
    FOREIGN KEY ("PARENT_CATEGORY") REFERENCES CGQA_COMPONENT_CATEGORIES("CATEGORY_ID"),
    CHECK("PARENT_CATEGORY" != "CATEGORY_ID")
);

-- Component details
-- 0 is false, 1 is true
CREATE TABLE "CGQA_COMPONENT_DETAILS"(
    "COMPONENT_ID" NUMBER PRIMARY KEY,
    "NAME" VARCHAR(256) NOT NULL,
    "STATUS" VARCHAR(256) NOT NULL,
    "DESCRIPTION" VARCHAR(256) NOT NULL,
    "QUERY" CLOB NOT NULL,
    "TYPE" VARCHAR(256) NOT NULL,
    "CATEGORY" NUMBER NOT NULL,
    "CREATION_DATETIME" VARCHAR(256) NOT NULL,
    "CREATED_BY" VARCHAR(256) NOT NULL,
    "SCHEDULE" NUMBER NOT NULL,
    "RUN_PRIORITY" NUMBER DEFAULT 0 NOT NULL,
    "UPDATED_DATETIME" VARCHAR(256) NOT NULL,
    "UPDATED_BY" VARCHAR(256),
    "DEPRECATED_STATUS" NUMBER DEFAULT 0 NOT NULL,
    FOREIGN KEY ("CATEGORY") REFERENCES "CGQA_COMPONENT_CATEGORIES"("CATEGORY_ID")
);

-- Component groups
CREATE TABLE "CGQA_COMPONENT_GROUPS"(
    "GROUP_ID" NUMBER PRIMARY KEY,
    "NAME" VARCHAR(256) NOT NULL,
    "COMPONENT" NUMBER NOT NULL,
    "ORDER_NUMBER" NUMBER NOT NULL,
    FOREIGN KEY ("COMPONENT") REFERENCES "CGQA_COMPONENT_DETAILS"("COMPONENT_ID")
);

-- Component Table Names, if a component is already running and needs to be run again, creates multiple temporary tables
CREATE TABLE "CGQA_COMPONENT_TABLES"(
    "TABLE_ID" NUMBER PRIMARY KEY,
    "NAME" VARCHAR(256) UNIQUE NOT NULL,
    "COMPONENT" NUMBER NOT NULL,
    FOREIGN KEY ("COMPONENT") REFERENCES "CGQA_COMPONENT_DETAILS"("COMPONENT_ID")
);

-- History table for components
CREATE TABLE "CGQA_COMPONENT_DETAILS_HISTORY"(
    "COMPONENT_HISTORY_ID" NUMBER PRIMARY KEY,
    "COMPONENT" NUMBER NOT NULL,
    "NAME" VARCHAR(256) NOT NULL,
    "STATUS" VARCHAR(256) NOT NULL,
    "DESCRIPTION" VARCHAR(256) NOT NULL,
    "QUERY" CLOB NOT NULL,
    "TYPE" VARCHAR(256) NOT NULL,
    "CATEGORY" NUMBER NOT NULL,
    "CREATION_DATETIME" VARCHAR(256) NOT NULL,
    "CREATED_BY" VARCHAR(256) NOT NULL,
    "SCHEDULE" NUMBER NOT NULL,
    "RUN_PRIORITY" NUMBER DEFAULT 0 NOT NULL,
    "UPDATED_DATETIME" VARCHAR(256) NOT NULL,
    "UPDATED_BY" VARCHAR(256),
    FOREIGN KEY ("COMPONENT") REFERENCES "CGQA_COMPONENT_DETAILS"("COMPONENT_ID"),
    FOREIGN KEY ("CATEGORY") REFERENCES "CGQA_COMPONENT_CATEGORIES"("CATEGORY_ID")
);

-- History table for component groups
CREATE TABLE "CGQA_COMPONENT_GROUPS_HISTORY"(
    "GROUP_HISTORY_ID" NUMBER PRIMARY KEY,
    "NAME" VARCHAR(256) NOT NULL,
    "COMPONENT_HISTORY" NUMBER NOT NULL,
    "ORDER_NUMBER" NUMBER NOT NULL,
    FOREIGN KEY ("COMPONENT_HISTORY") REFERENCES "CGQA_COMPONENT_DETAILS_HISTORY"("COMPONENT_HISTORY_ID")
);

-- History table for component tables
CREATE TABLE "CGQA_COMPONENT_TABLES_HISTORY"(
    "TABLE_HISTORY_ID" NUMBER PRIMARY KEY,
    "NAME" VARCHAR(256) NOT NULL,
    "COMPONENT_HISTORY" NUMBER NOT NULL,
    FOREIGN KEY ("COMPONENT_HISTORY") REFERENCES "CGQA_COMPONENT_DETAILS_HISTORY"("COMPONENT_HISTORY_ID")
);

CREATE SEQUENCE "COMPONENT_CATEGORIES_SEQ" START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE "COMPONENT_DETAILS_SEQ" START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE "COMPONENT_GROUPS_SEQ" START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE "COMPONENT_TABLES_SEQ" START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE "COMPONENT_CAT_HISTORY_SEQ" START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE "COMPONENT_DETAILS_HISTORY_SEQ" START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE "COMPONENT_GROUPS_HISTORY_SEQ" START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE "COMPONENT_TABLES_HISTORY_SEQ" START WITH 1 INCREMENT BY 1;
-- For the names of the temporary tables created
CREATE SEQUENCE "COMPONENT_TEMP_TABLE_NAME_SEQ" START WITH 1 INCREMENT BY 1;